name: SSH Deploy
on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#      # Install PHP
#      - name: Setup PHP
#        uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
#        with:
#          php-version: '8.1'
#          coverage: none
#          tools: composer:v2
#          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo
#        env:
#          update: true
#      - name: Check PHP Version
#        run: php -v

      # Install backend dependencies (Composer)
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Composer dependencies
        run: composer install

      # Prepare .env file for production
      - name: Make production envfile
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_APP_ENV: prod
          envkey_APP_DEBUG: false
          envkey_APP_SECRET: ${{ secrets.APP_SECRET }}
          envkey_MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          envkey_MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          envkey_MYSQL_USER: ${{ secrets.MYSQL_USER }}
          envkey_MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          envkey_DATABASE_URL: mysql://${{ secrets.MYSQL_USER }}:${{ secrets.MYSQL_PASSWORD }}@erp-mysql:3306/${{ secrets.MYSQL_DATABASE }}?serverVersion=8&charset=utf8mb4
          file_name: .env.prod

      # Copying files and artifacts via SSH
      - name: Copying files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          passphrase: ''
          rm: true
          source: "./"
          target: ${{ secrets.REMOTE_DIR }}

      # Run commands on production
      - name: Executing remote ssh commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          passphrase: ''
          script: |
            cd ${{ secrets.REMOTE_DIR }} && make start-prod && make clear-and-db
